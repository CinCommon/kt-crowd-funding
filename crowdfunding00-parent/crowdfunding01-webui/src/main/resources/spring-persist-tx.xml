<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="cc.stevenyin.crowd.service"></context:component-scan>
    <!-- 装配密码加密 -->
    <!--    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>-->

    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 装配数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务切面 -->
    <aop:config>
        <!-- 配置切入点表达式
            考虑到后面整合SpringSecurity,避免把UserDetailsService加入事务控制，让切入点表达式定位到ServiceImpl
         -->
        <aop:pointcut expression="execution(* *..*ServiceImpl.*(..))" id="txPointCut"/>
        <!-- 配置事务建议 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

    <!-- 配置通知方法 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- 查询方法：配置只读属性，让数据库知道这是一个查询操作, 能够进行一定的优化 -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>

            <!-- 增删改方法 :配置事务传播行为、回滚异常-->
            <!--
            propagation: 默认值是REQUIRED, 表示当前方法必须工作在事务中, 如果当前线程上没有已经开启的事务, 则会自己开启新事务, 如果已经包含在事务中, 就使用已有的事务,
            REQUIRES_NEW: 无论当前线程上是否有事务都会自己开启新事务, 在自己开启的事务中运行
            不会收到其他事务回滚的影响
            -->
            <!--
                rollback-for: 出现哪些异常会回滚, 默认是RuntimeException, 这里使用Exception, 任何异常都会回滚.
            -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
</beans>